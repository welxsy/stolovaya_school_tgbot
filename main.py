import os
from dotenv import load_dotenv
import asyncio
import pyodbc
import nest_asyncio
from telegram import Update, ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger()

nest_asyncio.apply()
load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")
user_selected_students = {}

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
conn = pyodbc.connect(
    "DRIVER={SQL Server};"
    "SERVER=localhost\\SQLEXPRESS;"
    "DATABASE=School12db;"
    "Trusted_Connection=yes;"
)
cursor = conn.cursor()


# –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    user_name = update.message.from_user.full_name
    logger.info(f"Start command received from {user_name} (ID: {user_id})")
    keyboard = [["üìã –ú–ï–ù–Æ"], ["‚ÑπÔ∏è–ò–ù–°–¢–†–£–ö–¶–ò–Ø"]]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text("üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)


async def menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_name = update.message.from_user.full_name
    logger.info(f"Menu command received from {user_name} (ID: {update.message.from_user.id})")

    keyboard = [["üìú –°–û–ó–î–ê–¢–¨ –°–ü–ò–°–û–ö"], ["üìÇ –ü–†–û–®–õ–´–ï –°–ü–ò–°–ö–ò"], ["üîô –ù–∞–∑–∞–¥"]]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text("üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=reply_markup)


async def info(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_name = update.message.from_user.full_name
    logger.info(f"Info command received from {user_name} (ID: {update.message.from_user.id})")

    await update.message.reply_text("‚ÑπÔ∏è –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–ø–∏—Å–∫–∏ —É—á–µ–Ω–∏–∫–æ–≤!!!"
                                    "\n\n"
                                    "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:\n"
                                    "‚Ä¢ –°–æ–∑–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫ ‚Äî —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ —É—á–µ–Ω–∏–∫–æ–≤.\n"
                                    "‚Ä¢ –ü—Ä–æ—à–ª—ã–µ —Å–ø–∏—Å–∫–∏ ‚Äî –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Ä–∞–Ω–µ–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏.\n"
                                    "‚Ä¢ –ù–∞–∑–∞–¥ ‚Äî –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é.\n"
                                    "\n"
                                    "–°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞:\n"
                                    "‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Å –∏ –¥–æ–±–∞–≤—å—Ç–µ —É—á–µ–Ω–∏–∫–æ–≤.\n"
                                    "‚Ä¢ –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ (–¥–æ–±–∞–≤–∏—Ç—å/—É–¥–∞–ª–∏—Ç—å —É—á–µ–Ω–∏–∫–æ–≤) –∏–ª–∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ Excel.\n"
                                    "\n"
                                    "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:\n"
                                    "‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ –∏–ª–∏ —É–¥–∞–ª–∏—Ç–µ —É—á–µ–Ω–∏–∫–æ–≤ –∏–∑ —Å–ø–∏—Å–∫–∞.\n"
                                    "\n"
                                    "–ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ä—ã—Ö —Å–ø–∏—Å–∫–æ–≤:\n"
                                    "‚Ä¢ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª –ü—Ä–æ—à–ª—ã–µ —Å–ø–∏—Å–∫–∏ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–∞–Ω–µ–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–º.\n"
                                    "\n"
                                    "–ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –∫–ª–∞—Å—Å–∞ –≤—ã —Å–º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —É—á–µ–Ω–∏–∫–æ–≤ –≤ —Å–ø–∏—Å–æ–∫, –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ –∏ –∑–∞—Ç–µ–º –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å.'"
                                    "\n\n"
                                    "!!!!! –î–õ–Ø –¢–û–ì–û –ß–¢–û–ë–´ –û–¢–†–ï–î–ê–ö–¢–ò–†–û–í–ê–¢–¨ –£–ñ–ï –û–¢–ü–†–ê–í–õ–ï–ù–ù–´–ô –°–ü–ò–°–û–ö, –ü–†–û–°–¢–û –°–û–ó–î–ê–ô–¢–ï –ù–û–í–´–ô. –û–¢–ü–†–ê–í–õ–ï–ù –ë–£–î–ï–¢ –ü–û–°–õ–ï–î–ù–ò–ô –°–û–ó–î–ê–ù–ù–´–ô –°–ü–ò–°–û–ö.")


# –í—ã–±–æ—Ä –∫–ª–∞—Å—Å–∞
async def choose_class(update: Update, context: ContextTypes.DEFAULT_TYPE):
    cursor.execute("SELECT ClassID, ClassName FROM Classes")
    classes = cursor.fetchall()

    keyboard = [
        [InlineKeyboardButton(c.ClassName, callback_data=f"class_{c.ClassID}")] for c in classes
    ]

    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Å:", reply_markup=reply_markup)


async def main():
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("menu", menu))
    app.add_handler(CommandHandler('info', info))
    await app.run_polling()


if __name__ == '__main__':
    asyncio.get_event_loop().run_until_complete(main())
